definitions:
  dtos.CreateChatDto:
    properties:
      user1_id:
        type: integer
      user2_id:
        type: integer
    type: object
  dtos.CreateChatMessageDto:
    properties:
      chat:
        type: integer
      text:
        type: string
      user:
        type: integer
    type: object
  dtos.CreateUserDto:
    properties:
      username:
        type: string
    type: object
  dtos.ModifyUserDto:
    properties:
      id:
        type: integer
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /chat:
    post:
      consumes:
      - application/json
      description: create chat
      parameters:
      - description: new chat data
        in: body
        name: chat
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateChatDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: create chat
      tags:
      - chat
  /chat/{id}:
    delete:
      consumes:
      - application/json
      description: delete chat
      parameters:
      - description: chat id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: delete chat
      tags:
      - chat
    get:
      consumes:
      - application/json
      description: Get chat by 1
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get chat by id
      tags:
      - chat
  /chats/{user_id}:
    get:
      consumes:
      - application/json
      description: Get chats for user
      parameters:
      - description: user_id
        in: path
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Find chats for user
      tags:
      - chat
  /chats/all:
    get:
      consumes:
      - application/json
      description: get all chats
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: get all chats
      tags:
      - chat
  /message:
    post:
      consumes:
      - application/json
      description: Create message by id
      parameters:
      - description: message
        in: body
        name: message
        schema:
          $ref: '#/definitions/dtos.CreateChatMessageDto'
      produces:
      - application/json
      responses: {}
      summary: Create message by id
      tags:
      - message
  /message/{id}:
    delete:
      consumes:
      - application/json
      description: Delete message by id
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Delete message by id
      tags:
      - message
    get:
      consumes:
      - application/json
      description: Get message by id
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get message by id
      tags:
      - message
  /user:
    get:
      consumes:
      - application/json
      description: get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: get all users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: Account username
        in: body
        name: username
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: create user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: modify user by id
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dtos.ModifyUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: modify user by id
      tags:
      - user
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: delete user
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: delete user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: get user by id
      parameters:
      - description: User id
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: get user by id
      tags:
      - user
swagger: "2.0"
